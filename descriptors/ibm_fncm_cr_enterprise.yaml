
###############################################################################
##
##Licensed Materials - Property of IBM
##
##(C) Copyright IBM Corp. 2020. All Rights Reserved.
##
##US Government Users Restricted Rights - Use, duplication or
##disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
##
###############################################################################
apiVersion: fncm.ibm.com/v1
kind: FNCMCluster
metadata:
  name: fncmdeploy
  labels:
    app.kubernetes.io/instance: ibm-fncm
    app.kubernetes.io/managed-by: ibm-fncm
    app.kubernetes.io/name: ibm-fncm
    release: 5.5.5
spec:
  ##########################################################################
  ## This section contains the shared configuration for all FNCM components #
  ##########################################################################
  appVersion: 20.0.2
  shared_configuration:

    ## The deployment context as selected.
    sc_deployment_context: FNCM

    ## All FNCM components must use/share the image_pull_secrets to pull images
    image_pull_secrets: 
    - admin.registrykey

    ## All FNCM components must use/share the same docker image repository.  For example, if IBM Entitlement Registry is used, then 
    ## it should be "cp.icr.io".  Otherwise, it will be a local docker registry.
    sc_image_repository: cp.icr.io
    
    ## Specify the RunAsUser for the security context of the pod.  This is usually a numeric value that corresponds to a user ID. Optional for OCP.
    sc_run_as_user:

    ## All FNCM components must use/share the root_ca_secret in order for integration
    root_ca_secret: icp4a-root-ca

    ## FNCM capabilities to be deployed.  This CR represents the "content" pattern (aka FileNet Content Manager), which includes the following 
    ## mandatory components: cpe, icn (Navigator), graphql and optional components: css, cmis, es (External Share) and tm (Task Manager)
    sc_deployment_patterns: content

    ## The optional components to be installed if listed here.  The user can choose what components to be installed.
    ## The optional components are: css (Content Search Services), cmis, es (External Share) and tm (Task Manager)
    sc_optional_components: 

    ## The deployment type as selected.
    sc_deployment_type: enterprise

    ## The platform to be deployed specified by the user.  Possible values are: OCP, ROKS, and other.  This is populated by the User 
    sc_deployment_platform: 
    
    ## Enable/disable ECM (FNCM) / BAN initialization (e.g., creation of P8 domain, creation/configuration of object stores, 
    ## creation/configuration of CSS servers, and initialization of Navigator (ICN)).  If the "initialize_configuration" section 
    ## is defined in the CR, then that configuration will take precedence overriding this parameter.  Note that if you are upgrading or
    ## migrating, set this parameter to "false" since the env has been previously initialized.
    sc_content_initialization: false
    
    ## Enable/disable the ECM (FNCM) / BAN verification (e.g., creation of test folder, creation of test document, 
    ## execution of CBR search, and creation of Navigator demo repository and desktop).  If the "verify_configuration" 
    ## section is defined in the CR, then that configuration will take precedence overriding this parameter.  Note that if you are upgrading or
    ## migrating, set this parameter to "false" since the env has been previously verified.
    sc_content_verification: false

    ## For OCP, this is used to create route, you should input a valid hostname in the required field.
    sc_deployment_hostname_suffix: "{{ meta.namespace }}.<Required>"

    ## If the root certificate authority (CA) key of the external service is not signed by the operator root CA key, provide the TLS certificate of 
    ## the external service to the component's truststore.
    trusted_certificate_list: []

   ## Provide the storage class names for the storage. It can be one storage class for all storage classes or can provide different one for each.
   ## Operator will use the provided storage classes to provision required PVC volumes.
    storage_configuration:
      sc_slow_file_storage_classname: "<Required>"
      sc_medium_file_storage_classname: "<Required>"
      sc_fast_file_storage_classname: "<Required>"

   ## Uncomment out this section if you have OpenId Connect providers. 
    # open_id_connect_providers:
    ## set the provider name that is for your redirect url.
    #- provider_name: ""
      ## Set the display name for the sign in button in navigator.
    #  display_name: "Single Sign on"
    #  # Enter your oidc secret names here for cpe, nav external share and graphql.
    #  # Not all are required depending on you deployment.
    #  client_oidc_secret:
    #     es: "" # Points to a secret with client_id and client_secret in that format.
    #     nav: "" # Points to a secret with client_id and client_secret in that format.
    #     cpe: "" # Points to a secret with client_id and client_secret in that format.
    #     graphql: "" # Points to a secret with client_id and client_secret in that format.
    #  issuer_identifier: ""
    #  # REQUIRED PROPERTIES AND VALUES which are common
    #  # If not set will be set to the defaults.
    #  response_type: "code"
    #  scope: "openid email profile"
    #  map_identity_to_registry_user: "false"
    #  authn_session_disabled: "false"
    #  inbound_propagation: "supported"
    #  https_required: "true"
    #  validation_method: "introspect"
    #  disable_ltpa_cookie: "true"
    #  signature_algorithm: "RS256"
    #  user_identifier: "sub" # sub for ums and ibm id, email for google
    #  unique_user_identifier: "sub" # sub for ums and ibm id, email for google
    #  user_identity_to_create_subject: "sub" # sub for ums and ibm id, email for google
    #  ## Uncomment out discovery_endpoint_url for Google or UMS IdP.
    #  # discovery_endpoint_url: 
    #  ##
    #  # Optional parameters 
    #  ##
    #  # authorization_endpoint_url: ""
    #  # token_endpoint_url: ""
    #  # validation_endpoint_url: ""
    #  # trust_alias_name: "secrent name you created"
    #  # disables_iss_checking: "true"
    #  # jwk_client_oidc_secret:
    #  #   es: "" # Points to a secret with client_id and client_secret in that format.
    #  #   nav: "" # Points to a secret with client_id and client_secret in that format.
    #  #   cpe: "" # Points to a secret with client_id and client_secret in that format.
    #  #   graphql: ""  # Points to a secret with client_id and client_secret in that format.
    #  # token_reuse: "true"

    #  ##
    #  # User defined parameters.  
    #  # If you do not see a parameter that is needed for you OpenId Connect provider.
    #  # You are able to defined in this section has a key value pair separated by the delimeter `:`
    #  # If you want to change the default delimeter, add `DELIM=<NEW_DELIMETER>` infront of your 
    #  # key value pair. Ex: 'DELIM=;myKey;myValue'.  In this example, the new delimeter is `;` and 
    #  # the key value pair is set to `myKey;myValue` instead of `myKey:myValue`.
    #  ##
    #  # oidc_ud_param:
    #  # - 'DELIM=;myKey;myValue'
    #  # - "myKey2:myValue2"
    #  # - "myKey3:myValue3"

  ## The beginning section of LDAP configuration for FNCM
  ldap_configuration:
    ## The possible values are: "IBM Security Directory Server" or "Microsoft Active Directory"
    lc_selected_ldap_type: "<Required>"

    ## The name of the LDAP server to connect
    lc_ldap_server: "<Required>"

    ## The port of the LDAP server to connect.  Some possible values are: 389, 636, etc.
    lc_ldap_port: "<Required>"

    ## The LDAP bind secret for LDAP authentication.  The secret is expected to have ldapUsername and ldapPassword keys.  Refer to Knowledge Center for more info.
    lc_bind_secret: ldap-bind-secret 

    ## The LDAP base DN.  For example, "dc=example,dc=com", "dc=abc,dc=com", etc
    lc_ldap_base_dn: "<Required>"

    ## Enable SSL/TLS for LDAP communication. Refer to Knowlege Center for more info.
    lc_ldap_ssl_enabled: true
    
    ## The name of the secret that contains the LDAP SSL/TLS certificate.
    lc_ldap_ssl_secret_name: "<Required>"

    ## The LDAP user name attribute.  One possible value is "*:cn". Refer to Knowlege Center for more info.
    lc_ldap_user_name_attribute: "*:cn"

    ## The LDAP user display name attribute. One possible value is "cn". Refer to Knowlege Center for more info.
    lc_ldap_user_display_name_attr: "cn"

    ## The LDAP group base DN.  For example, "dc=example,dc=com", "dc=abc,dc=com", etc
    lc_ldap_group_base_dn: "<Required>"

    ## The LDAP group name attribute.  One possible value is "*:cn". Refer to Knowlege Center for more info.
    lc_ldap_group_name_attribute: "*:cn"

    ## The LDAP group display name attribute.  One possible value is ":cn". Refer to Knowlege Center for more info.
    lc_ldap_group_display_name_attr: "cn"

    ## The LDAP group membership search filter string.  One possible value is "(|(&(objectclass=groupofnames)(member={0}))(&(objectclass=groupofuniquenames)(uniquemember={0})))"
    lc_ldap_group_membership_search_filter: "(|(&(objectclass=groupofnames)(member={0}))(&(objectclass=groupofuniquenames)(uniquemember={0})))"

    ## The LDAP group membership ID map.  One possible value is "groupofnames:member"
    lc_ldap_group_member_id_map: "groupofnames:member"
    
    ## Comments to be deleted by user depending on LDAP type.
    # ad:
    #   lc_ad_gc_host: "<Required>"
    #   lc_ad_gc_port: "<Required>"
    #   lc_user_filter: "(&(cn=%v)(objectclass=person))"
    #   lc_group_filter: "(&(cn=%v)(|(objectclass=groupofnames)(objectclass=groupofuniquenames)(objectclass=groupofurls)))"
    # tds:
    #   lc_user_filter: "(&(cn=%v)(objectclass=person))"
    #   lc_group_filter: "(&(cn=%v)(|(objectclass=groupofnames)(objectclass=groupofuniquenames)(objectclass=groupofurls)))"

  ## Comments to be deleted by user only when plan to use external share 
  ## The beginning section of external LDAP configuration for FNCM if External Share is deployed
  # ext_ldap_configuration:
  #   lc_selected_ldap_type: "<Required>"
  #   lc_ldap_server: "<Required>"
  #   lc_ldap_port: "<Required>"
  #   lc_bind_secret: ldap-bind-secret
  #   lc_ldap_base_dn: "<Required>"
  #   lc_ldap_ssl_enabled: true
  #   lc_ldap_ssl_secret_name: "<Required>"
  #   lc_ldap_user_name_attribute: "*:cn"
  #   lc_ldap_user_display_name_attr: "cn"
  #   lc_ldap_group_base_dn: "<Required>"
  #   lc_ldap_group_name_attribute: "*:cn"
  #   lc_ldap_group_display_name_attr: "cn"
  #   lc_ldap_group_membership_search_filter: "(|(&(objectclass=groupofnames)(member={0}))(&(objectclass=groupofuniquenames)(uniquemember={0})))"
  #   lc_ldap_group_member_id_map: "groupofnames:member"

    ## Comments to be deleted: User  will uncomment the section needed based on user's environment
    # ad:
    ## This is the Global Catalog port for the LDAP
    #   lc_ad_gc_host: "<Required>"
    #   lc_ad_gc_port: "<Required>"
    #   lc_user_filter: "(&(cn=%v)(objectclass=person))"
    #   lc_group_filter: "(&(cn=%v)(|(objectclass=groupofnames)(objectclass=groupofuniquenames)(objectclass=groupofurls)))"
    # tds:
    #   lc_user_filter: "(&(cn=%v)(objectclass=person))"
    #   lc_group_filter: "(&(cn=%v)(|(objectclass=groupofnames)(objectclass=groupofuniquenames)(objectclass=groupofurls)))"

  ## The beginning section of database configuration for FNCM
  datasource_configuration:
    ## The database configuration for the GCD datasource for CPE
    dc_gcd_datasource:
      ## Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR" or "oracle" or "sqlserver" or "postgresql".
      dc_database_type: "<Required>"
      ## The GCD non-XA datasource name.  The default value is "FNGCDDS".
      dc_common_gcd_datasource_name: "FNGCDDS"
      ## The GCD XA datasource name. The default value is "FNGCDDSXA".
      dc_common_gcd_xa_datasource_name: "FNGCDDSXA"
      ## Provide the database server name or IP address of the database server.
      database_servername: "<Required>"
      ## Provide the name of the database for the GCD for CPE.  For example: "GCDDB"
      database_name: "<Required>"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "<Required>"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_gcd_jdbc_url: "<Required>"
    
      ## If the database type is Db2 HADR, then complete the rest of the parameters below.
      ## Provide the database server name or IP address of the standby database server.
      dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      dc_hadr_max_retries_for_client_reroute: 3
    
    ## The database configuration for the object store 1 (OS1) datasource for CPE
    dc_os_datasources:
      ## Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR" or "oracle" or "sqlserver" or "postgresql".  This should be the same as the 
      ## GCD configuration above.
    - dc_database_type: "<Required>"
      ## The OS1 non-XA datasource name.  The default value is "FNOS1DS".
      dc_common_os_datasource_name: "FNOS1DS"
      ## The OS1 XA datasource name.  The default value is "FNOS1DSXA".
      dc_common_os_xa_datasource_name: "FNOS1DSXA"
      ## Provide the database server name or IP address of the database server.  This should be the same as the 
      ## GCD configuration above.
      database_servername: "<Required>"
      ## Provide the name of the database for the object store 1 for CPE.  For example: "OS1DB"
      database_name: "<Required>"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "<Required>"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_os_jdbc_url: "<Required>"
      ######################################################################################
      ## If the database type is "Db2HADR", then complete the rest of the parameters below.
      ## Otherwise, remove or comment out the rest of the parameters below.
      ######################################################################################
      dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      dc_hadr_max_retries_for_client_reroute: 3
    ## The database configuration for ICN (Navigator) - aka BAN (Business Automation Navigator)
    dc_icn_datasource:
      ## Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR" or "oracle" or "sqlserver" or "postgresql".  This should be the same as the 
      ## GCD and object store configuration above.
      dc_database_type: "<Required>"
      ## Provide the ICN datasource name.  The default value is "ECMClientDS".
      dc_common_icn_datasource_name: "ECMClientDS"
      database_servername: "<Required>"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "<Required>"
      ## Provide the name of the database for ICN (Navigator).  For example: "ICNDB"
      database_name: "<Required>"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_icn_jdbc_url: "<Required>"
      dc_hadr_standby_servername: "<Required>"
      ######################################################################################
      ## If the database type is "Db2HADR", then complete the rest of the parameters below.
      ## Otherwise, remove or comment out the rest of the parameters below.
      ######################################################################################
      ## Provide the standby database server port.  For Db2, the default is "50000".
      dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      dc_hadr_max_retries_for_client_reroute: 3

  ## Monitor setting
#  monitoring_configuration:
  #   mon_metrics_writer_option: 4
  #   mon_enable_plugin_pch: false
  #   mon_enable_plugin_mbean: false
  #   collectd_plugin_write_graphite_host: localhost
  #   collectd_plugin_write_graphite_port: 2003
  #   collectd_interval: 10
  #   collectd_disable_host_monitoring: false
  #   collectd_plugin_write_prometheus_port: 9103

  # # Logging setting
  # logging_configuration:
  #   mon_log_parse: false
  #   mon_log_service_endpoint: localhost:5044
  #   private_logging_enabled: false
  #   logging_type: default
  #   mon_log_path: /path_to_extra_log

  ########################################################################
  ########      IBM FileNet Content Manager configuration         ########
  ########################################################################
  ecm_configuration:
    cpe:
      cpe_production_setting:
        license_model: FNCM.PVUNonProd   #Default to Non-Prod , change this value to match your deployment
